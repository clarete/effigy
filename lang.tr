# -*- Mode: peg; -*-

Module     <- { "Module" Code }
Code       <- { "Code" Expression }
            / { "Code" Statement }
            / { "Code" { (Statement / Expression)+ } }

Statement  <- { "Statement" Assignment }

Assignment <- { "Assignment" { Expression StoreName } }

Expression <- { "Expression" Comparison }
            / { "Expression" Term }
            / { "Expression" Factor }
            / { "Expression" Power }
            / { "Expression" Unary }
            / { "Expression" Primary }

Comparison <- { "Comparison" Term } / Expression
Term       <- { "Term" Factor }     / Expression
Factor     <- { "Factor" Power }    / Expression
Power      <- { "Power" Unary }     / Expression
Unary      <- { "Unary" Primary }   / Expression
Primary    <- Value
            / FunCall
            / Identifier
            / Expression

Value      <- { "Value" Number }

FunCall    <- { "FunCall" { Identifier FunParams } }  # One or more parameters
            / { "FunCall" Identifier }                # No parameters

FunParams  <- { Expression* }
            / Expression

Number     <- { "Number" Atom }
Identifier <- { "Identifier" Atom  }
StoreName  <- { "StoreName" Atom  }

Atom       <- !{ .* } .
